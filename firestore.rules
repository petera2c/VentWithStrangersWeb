rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    //return exists(/databases/$(database)/documents/block_check/$(userID+"|||"+userID2));

    match /admin_notifications/{adminNotificationID} {
      allow read, write: if true;
      allow update, delete: if false;
    }

    match /block_check/{userIDuserID2} {
      allow read: if request.auth.uid == userIDuserID2.split('\\|\\|\\|')[0] || request.auth.uid == userIDuserID2.split('\\|\\|\\|')[1];
      allow write: if request.resource.data.keys().hasOnly([request.auth.uid]);
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly([request.auth.uid]);
      allow delete: if false;
    }

    match /comments/{commentID} {
      allow read: if true;
      allow write, update: if request.auth.uid == request.resource.data.userID && (!(get(/databases/$(database)/documents/users_display_name/$(request.auth.uid)).data.keys().hasAny(['karma'])) || get(/databases/$(database)/documents/users_display_name/$(request.auth.uid)).data.karma > -50);
      allow delete: if request.auth.uid == resource.data.userID || get(/databases/$(database)/documents/vents/$(resource.data.ventID)).data.userID == request.auth.uid;
    }
    match /comment_likes/{commentIDUserID} {
      allow read, write, update, delete: if request.auth.uid == commentIDUserID.split('\\|\\|\\|')[1];
    }
    match /comment_reports/{commentIDUserID} {
      allow read, write, update, delete: if request.auth.uid == commentIDUserID.split('\\|\\|\\|')[1];
    }

    match /conversations/{conversationID} {
      allow read: if request.auth.uid in resource.data.members;
      allow write, delete: if request.auth.uid in request.resource.data.members;
      allow update: if request.auth.uid in resource.data.members;
    }
    match /conversation_extra_data/{conversationID} {
      match /messages/{messagesID} {
        allow read: if true;
        allow write: if request.auth.uid == request.resource.data.userID;
        allow update: if request.auth.uid == resource.data.userID
          && request.auth.uid == request.resource.data.userID;
        allow delete: if request.auth.uid == resource.data.userID;
      }
    }

    match /invite_uid/{secondUID} {
      allow read: if resource.data.primary_uid == request.auth.uid;
      allow write, update, delete: if false;
    }
    match /invited_users/{uid} {
      allow write: if request.auth.uid == uid;
      allow read, delete: if false;
    }

    match /notifications/{notificationID} {
      allow read: if request.auth.uid == resource.data.userID;
      allow write, delete: if request.auth.uid == request.resource.data.userID;
      allow update: if request.auth.uid == request.resource.data.userID
        && request.resource.data.userID == resource.data.userID;
    }


    match /rewards/{rewardID} {
      allow read: if request.auth.uid == resource.data.userID;
      allow write, update, delete: if false;
    }

    match /total_users_online/{randomID} {
      allow read: if true;
      allow write, update, delete: if false;
    }

    match /unread_conversations_count/{userID} {
      allow read, write, update, delete: if request.auth.uid == userID;
    }

    match /user_rewards/{userID} {
      allow read: if request.auth.uid == userID;
      allow write, update, delete: if false;
    }
    match /user_expo_tokens/{userID} {
      allow read, write, update, delete: if request.auth.uid == userID;
    }
    match /user_matches/{userID} {
      allow read, write, update, delete: if true;
    }
    match /user_day_limit_vents/{userID} {
      allow read: if request.auth.uid == userID;
      allow write, update, delete: if false;
    }
    match /user_mobile_app_rating/{userID} {
      allow read, write, update, delete: if request.auth.uid == userID;
    }
    match /user_subscription/{userID} {
      allow read, write, update, delete: if request.auth.uid == userID;
    }
    match /user_vent_timeout/{userID} {
      allow read: if request.auth.uid == userID;
      allow write, update, delete: if false;
    }
    match /users/{userID} {
      allow read, write, update, delete: if request.auth.uid == userID;
    }
    match /users_display_name/{userID} {
      allow read: if true;
      allow write, update, delete: if request.auth.uid == userID;

      match /karma {
        allow read: if true;
        allow write, update, delete: if false;
      }
    }
    match /users_info/{userID} {
      allow read: if true;
      allow write, update, delete: if request.auth.uid == userID;
    }
    match /users_settings/{userID} {
      allow read, write, update, delete: if request.auth.uid == userID;
    }


    match /vents/{ventID} {
      allow read: if true;
      allow write, update: if request.auth.uid == request.resource.data.userID && (!(get(/databases/$(database)/documents/users_display_name/$(request.auth.uid)).data.keys().hasAny(['karma'])) || get(/databases/$(database)/documents/users_display_name/$(request.auth.uid)).data.karma > -50);
      allow delete: if request.auth.uid == resource.data.userID;

      match /trending_score {
        allow read: if true;
        allow write, update, delete: if false;
      }
    }
    match /vent_likes/{ventIDUserID} {
      allow read, write, update, delete: if request.auth.uid == ventIDUserID.split('\\|\\|\\|')[1];
    }
    match /vent_reports/{ventIDUserID} {
      allow read, write, update, delete: if request.auth.uid == ventIDUserID.split('\\|\\|\\|')[1];
    }
  }
}
