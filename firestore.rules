rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /comments/{commentID} {
      allow read: if true;
      allow write, delete: if request.auth.uid == request.resource.data.userID;
      allow update: if request.auth.uid == request.resource.data.userID
        && request.auth.uid == resource.data.userID;
    }

    match /conversations/{ventID} {
      allow read: if request.auth.uid in resource.data.members
      allow write, delete: if request.auth.uid in request.resource.data.members;
      allow update: if request.auth.uid in resource.data.members
        && request.auth.uid in request.resource.data.members;
    }

    match /conversation_data_extra/{conversationID} {
      match /messages/{messagesID} {
        allow read: if true;
        allow write, delete: if request.auth.uid == request.resource.data.userID;
        allow update: if request.auth.uid == resource.data.userID
          && request.auth.uid == request.resource.data.userID;
      }
    }

    match /notifications/{notificationID} {
      allow read: if request.auth.uid == resource.data.userID;
      allow write, delete: if request.auth.uid == request.resource.data.userID;
      allow update: if request.auth.uid == request.resource.data.userID
        && request.resource.data.userID == resource.data.userID;
    }

    match /vents/{ventID} {
      allow read: if true;
      allow write, delete: if request.auth.uid == request.resource.data.userID;
      allow update: if request.auth.uid == request.resource.data.userID
        && request.resource.data.userID == resource.data.userID;
    }

    match /users/{userID} {
      allow read: if true;
      allow write, update, delete: if request.auth.uid == userID;
    }

    match /users_display_name/{userID} {
      allow read: if true;
      allow write, update, delete: if request.auth.uid == userID;
    }

    match /unread_conversations_count/{unreadConversationsCountID} {
      allow read: if true;
      allow write, update, delete: if request.auth.uid == unreadConversationsCountID;
    }

    match /user_expo_tokens/{userExpoTokensID} {
      allow read: if true;
      allow write, update, delete: if request.auth.uid == userExpoTokensID;
    }

    match /vent_likes/{userExpoTokensID} {
      allow read, write: if true;
    }

    match /comment_likes/{userExpoTokensID} {
      allow read, write: if true;
    }
  }
}
